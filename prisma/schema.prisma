// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Form {
  formId    String   @id @default(cuid())
  formName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // createdBy   User          @relation(fields: [createdById], references: [id])
  // createdById String
  formSection Int[]
  FormSection FormSection[]

  @@index([formName])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // forms         Form[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model FormSection {
  sectionId    String @id @default(cuid())
  sectionIndex Int    @default(0)
  sectionName  String
  sectionDesc  String

  formFK   Form       @relation(fields: [formId], references: [formId])
  formId   String
  Question Question[]

  @@index([sectionName])
}

model Question {
  questionId    String   @id @default(cuid())
  questionName  String
  questionDesc  String
  questionType  String
  questionIndex Int      @default(0)
  required      Boolean  @default(false)
  options       String[] @default([])

  formSectionFK FormSection @relation(fields: [formSectionId], references: [sectionId])
  formSectionId String

  @@index([questionName])
}
